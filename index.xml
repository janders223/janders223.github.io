<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>janders223</title>
    <link>http://janders223.com/</link>
    <description>Recent content on janders223</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jun 2020 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="http://janders223.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Craziest Terraform for_each I&#39;ve Ever Written</title>
      <link>http://janders223.com/posts/terraform-for-each/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 -0400</pubDate>
      
      <guid>http://janders223.com/posts/terraform-for-each/</guid>
      <description>Today I set out on a mission to refactor some code that has been bothering me for some time. The verbosity of terraform code often often bothers me and I always look for opportunities to DRY up my code. The particular code of interest here is deploying multiple instances of virtual machines into multiple resource groups in Azure.
The first iteration looked something similar to the following.
resource &amp;#34;azurerm_linux_virtual_machine&amp;#34; &amp;#34;myvm&amp;#34; { count = var.</description>
    </item>
    
    <item>
      <title>Test Post</title>
      <link>http://janders223.com/posts/test-post/</link>
      <pubDate>Sun, 07 Jun 2020 00:00:00 -0400</pubDate>
      
      <guid>http://janders223.com/posts/test-post/</guid>
      <description>This is a test post to see how well this works.
What if I add some code&amp;hellip;
ripgrep something </description>
    </item>
    
  </channel>
</rss>